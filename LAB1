import random

def print_board(board):
    """Function to print the current state of the board"""
    for row in board:
        print(" | ".join(row))
        print("-" * 8)


def check_winner(board, player):
    """Check if the current player has won"""
    # Check rows
    for row in board:
        if all(cell == player for cell in row):
            return True

    # Check columns
    for col in range(3):
        if all(board[row][col] == player for row in range(3)):
            return True

    # Check diagonals
    if all(board[i][i] == player for i in range(3)):
        return True
    if all(board[i][2 - i] == player for i in range(3)):
        return True

    return False


def is_full(board):
    """Check if the board is full"""
    return all(cell != " " for row in board for cell in row)


def get_empty_positions(board):
    """Return list of empty positions as (row, col)"""
    return [(r, c) for r in range(3) for c in range(3) if board[r][c] == " "]


def computer_move(board, computer, human):
    """Computer AI: Try to win, then block, else random"""
    # 1. Can computer win?
    for (r, c) in get_empty_positions(board):
        board[r][c] = computer
        if check_winner(board, computer):
            return
        board[r][c] = " "

    # 2. Can computer block human?
    for (r, c) in get_empty_positions(board):
        board[r][c] = human
        if check_winner(board, human):
            board[r][c] = computer
            return
        board[r][c] = " "

    # 3. Otherwise, random move
    r, c = random.choice(get_empty_positions(board))
    board[r][c] = computer


def tic_tac_toe():
    """Main function to play Tic Tac Toe"""
    board = [[" " for _ in range(3)] for _ in range(3)]
   
    mode = input("Enter mode (1 for single-player, 2 for two-player): ").strip()
    human, computer = "X", "O"
    current_player = 0  # 0 -> X, 1 -> O

    print("Welcome to Tic Tac Toe!")
    print_board(board)

    while True:
        if mode == "1" and current_player == 1:  # Computer's turn
            print("Computer's turn...")
            computer_move(board, computer, human)
        else:
            print(f"Player {['X','O'][current_player]}'s turn")
            try:
                row = int(input("Enter row (0, 1, 2): "))
                col = int(input("Enter column (0, 1, 2): "))
            except ValueError:
                print("Please enter valid numbers!")
                continue

            if row not in [0, 1, 2] or col not in [0, 1, 2]:
                print("Invalid position! Try again.")
                continue

            if board[row][col] != " ":
                print("That spot is already taken! Try again.")
                continue

            board[row][col] = ['X','O'][current_player]

        print_board(board)

        # Check for winner
        if check_winner(board, ['X','O'][current_player]):
            if mode == "1" and current_player == 1:
                print("Computer wins!")
            else:
                print(f"Player {['X','O'][current_player]} wins!")
            break

        # Check for draw
        if is_full(board):
            print("It's a draw!")
            break

        # Switch player
        current_player = 1 - current_player


if __name__ == "__main__":
    tic_tac_toe()
